// –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ - –±–µ—Å—à–æ–≤–Ω–∞—è –∫–∞–∫ –≤ COLLECTION
(function() {
    'use strict';
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    if (window.innerWidth > 768) return;
    
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ—Å—à–æ–≤–Ω–æ–π –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏');
    
    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes mobileAutoScroll {
            0% { transform: translateX(0); }
            100% { transform: translateX(-50%); }
        }
        
        .mobile-scroll-wrapper {
            width: 100% !important;
            overflow: hidden !important;
            position: relative !important;
        }
        
        .mobile-scroll-track {
            display: flex !important;
            gap: 20px !important;
            backface-visibility: hidden !important;
            will-change: transform !important;
        }
    `;
    document.head.appendChild(style);
    
    // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –±–µ—Å—à–æ–≤–Ω–æ–π –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (–∫–∞–∫ –≤ COLLECTION)
    function setupSeamlessAutoScroll(selector, duration) {
        function trySetup() {
            const container = document.querySelector(selector);
            
            if (!container) return false;
            
            const cards = Array.from(container.children);
            if (cards.length === 0) return false;
            
            console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è:', selector, '–∫–∞—Ä—Ç–æ—á–µ–∫:', cards.length);
            
            // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ collection-slider.js)
            const wrapper = document.createElement('div');
            wrapper.className = 'mobile-scroll-wrapper';
            
            const track = document.createElement('div');
            track.className = 'mobile-scroll-track';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            cards.forEach(card => track.appendChild(card));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ø–∏–∏ –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ—Å—Ç–∏
            cards.forEach(card => {
                const copy = card.cloneNode(true);
                track.appendChild(copy);
            });
            
            // –ó–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            wrapper.appendChild(track);
            container.innerHTML = '';
            container.appendChild(wrapper);
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ collection-slider.js)
            track.style.transform = 'translateX(0)';
            track.style.animation = 'none';
            
            setTimeout(() => {
                track.style.animation = `mobileAutoScroll ${duration}s linear infinite`;
                console.log('üé¨ –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞:', selector);
            }, 10);
            
            // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å–∞–Ω–∏–π (–∫–∞–∫ –≤ COLLECTION)
            let pauseTimeout;
            wrapper.addEventListener('touchstart', () => {
                track.style.animationPlayState = 'paused';
                clearTimeout(pauseTimeout);
            });
            
            wrapper.addEventListener('touchend', () => {
                pauseTimeout = setTimeout(() => {
                    track.style.animationPlayState = 'running';
                }, 1500);
            });
            
            // –ü–∞—É–∑–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –≤–∫–ª–∞–¥–∫–∏ (–∫–∞–∫ –≤ collection-slider.js)
            document.addEventListener('visibilitychange', () => {
                if (document.hidden) {
                    track.style.animationPlayState = 'paused';
                } else {
                    track.style.animationPlayState = 'running';
                }
            });
            
            return true;
        }
        
        // –ü—Ä–æ–±—É–µ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å
        let attempts = 0;
        function attemptSetup() {
            attempts++;
            if (trySetup() || attempts >= 5) return;
            setTimeout(attemptSetup, 1000);
        }
        
        setTimeout(attemptSetup, 2000);
    }
    
    // –ó–∞–ø—É—Å–∫ –¥–ª—è –æ–±–µ–∏—Ö —Å–µ–∫—Ü–∏–π —Å –±—ã—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
    setupSeamlessAutoScroll('#ecosystem .ecosystem-grid', 12);
    setupSeamlessAutoScroll('#partnerships .partnerships-grid', 8);
    
})();