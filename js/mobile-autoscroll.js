// –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ - –Ω–∞–¥–µ–∂–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
(function() {
    'use strict';
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    if (window.innerWidth > 768) return;
    
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤');
    
    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏–∏
    const style = document.createElement('style');
    style.textContent = `
        @keyframes mobileAutoScroll {
            0% { transform: translateX(0); }
            100% { transform: translateX(-50%); }
        }
        
        .mobile-autoscroll-wrapper {
            width: 100% !important;
            overflow: hidden !important;
            position: relative !important;
        }
        
        .mobile-autoscroll-track {
            display: flex !important;
            gap: 20px !important;
            backface-visibility: hidden !important;
            will-change: transform !important;
        }
    `;
    document.head.appendChild(style);
    
    // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    function setupMobileAutoScroll(selector, duration) {
        function trySetup() {
            const container = document.querySelector(selector);
            
            if (!container) {
                console.log('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω:', selector);
                return false;
            }
            
            const cards = Array.from(container.children);
            
            if (cards.length === 0) {
                console.log('‚ùå –ù–µ—Ç –∫–∞—Ä—Ç–æ—á–µ–∫ –≤:', selector);
                return false;
            }
            
            console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∏:', selector, '–∫–∞—Ä—Ç–æ—á–µ–∫:', cards.length);
            
            // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            const wrapper = document.createElement('div');
            wrapper.className = 'mobile-autoscroll-wrapper';
            
            const track = document.createElement('div');
            track.className = 'mobile-autoscroll-track';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            cards.forEach(card => track.appendChild(card));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ø–∏–∏
            cards.forEach(card => {
                const copy = card.cloneNode(true);
                track.appendChild(copy);
            });
            
            // –ó–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            wrapper.appendChild(track);
            container.innerHTML = '';
            container.appendChild(wrapper);
            
            // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (–∫–∞–∫ –≤ collection-slider.js)
            track.style.transform = 'translateX(0)';
            track.style.animation = 'none';
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
            setTimeout(() => {
                track.style.animation = `mobileAutoScroll ${duration}s linear infinite`;
                console.log('üé¨ –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞ –¥–ª—è:', selector);
            }, 100);
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞—Å–∞–Ω–∏–π
            let pauseTimer;
            
            container.addEventListener('touchstart', () => {
                track.style.animationPlayState = 'paused';
                clearTimeout(pauseTimer);
            });
            
            container.addEventListener('touchend', () => {
                pauseTimer = setTimeout(() => {
                    track.style.animationPlayState = 'running';
                }, 2000);
            });
            
            return true;
        }
        
        // –ü—Ä–æ–±—É–µ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
        let attempts = 0;
        const maxAttempts = 10;
        
        function attemptSetup() {
            attempts++;
            
            if (trySetup()) {
                console.log('‚úÖ –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:', selector);
                return;
            }
            
            if (attempts < maxAttempts) {
                console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts} –¥–ª—è:`, selector);
                setTimeout(attemptSetup, 1000);
            } else {
                console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫—É –¥–ª—è:', selector);
            }
        }
        
        // –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(attemptSetup, 2000);
    }
    
    // –ó–∞–ø—É—Å–∫ –¥–ª—è –æ–±–µ–∏—Ö —Å–µ–∫—Ü–∏–π
    setupMobileAutoScroll('#ecosystem .ecosystem-grid', 35);
    setupMobileAutoScroll('#partnerships .partnerships-grid', 25);
    
})();